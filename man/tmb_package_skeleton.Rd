% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tmb_package_skeleton.R
\name{tmb_package_skeleton}
\alias{tmb_package_skeleton}
\title{Create a skeleton for a new package depending on \pkg{TMB}.}
\usage{
tmb_package_skeleton(name = "anRpackage", list = character(),
  environment = .GlobalEnv, path = ".", force = FALSE,
  code_files = character(), cpp_files = character(),
  tmb_files = character(), example_code = TRUE)
}
\arguments{
\item{name}{Character string: the package name and directory name for the package.  See \code{utils::package.skeleton}.}

\item{list}{Character vector naming the \R objects to put in the package.  See \code{utils::package.skeleton}.}

\item{environment}{An environment where objects are looked for.  See \code{utils::package.skeleton}.}

\item{path}{Path to put the package directory in.}

\item{force}{If \code{FALSE} will not overwrite an existing directory.}

\item{code_files}{A character vector with the paths to \R code files to build the package around.  \code{utils::package.skeleton}.}

\item{cpp_files}{A character vector with the paths to C++ source files to add to the package, or a logical.  If a non-empty character vector or \code{TRUE}, the package will use \pkg{Rcpp} features.}

\item{tmb_files}{A charactor vector with the paths to \pkg{TMB} source files to add to the package.}

\item{example_code}{If \code{TRUE}, example \pkg{TMB} source code is added to the package.}
}
\description{
Create a skeleton for a new package depending on \pkg{TMB}.
}
\details{
The created package is compatible with \pkg{roxygen2}-style documentation.  That is, a package passing \code{R CMD check --as-cran} is created out-of-the-box upon running the code in \strong{Examples}.
}
\examples{
\dontrun{
# create package with example code
tmb_package_skeleton(name = "TMBTestPackage", example_code = TRUE)

# for the following steps must have devtools package installed
setwd("TMBTestPackage")
# need to create shared library before running devtools::document()
pkgbuild::compile_dll()
devtools::document()
# essentially equivalent to R CMD check --as-cran
devtools::check()
}
}
